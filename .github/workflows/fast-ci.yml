name: Continuous Integration (fast)

on:
  push:
    branches: [workflow-updates]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [master]

env:
  PYTHON_DEFAULT_VERSION: 3.9
  GO_DEFAULT_VERSION: 1.15.13
  PATH: /go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  GOPATH: /go

jobs:
  build:
    runs-on: ubuntu-20.04
    container: "python:3.9-buster"
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Configure environment
        run: |
            cd /usr/local && \
            wget -q https://golang.org/dl/go${{ env.GO_DEFAULT_VERSION }}.linux-amd64.tar.gz && \
            tar xzf go${{ env.GO_DEFAULT_VERSION }}.linux-amd64.tar.gz && \
            rm go${{ env.GO_DEFAULT_VERSION }}.linux-amd64.tar.gz && mkdir /go
      - name: Install dependencies
        run: make deps
      - name: Build provider
        run: make build
      - name: Upload python bindings
        uses: actions/upload-artifact@v2
        with:
          name: py-terraform-provider-b2-${{ runner.os }}
          path: python-bindings/dist/py-terraform-provider-b2
          if-no-files-found: error
          retention-days: 1
  test_linux:
    needs: build
    runs-on: ubuntu-20.04
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
      NOPYBINDINGS: 1 # do not build python buildings
    container: 
      image: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        container:
          - golang:1.15.13-alpine3.14
          - golang:1.15.13-buster
        terraform:
          - 1.0.0
    steps:
      - uses: actions/checkout@v2
      - name: Add software dependencies
        if: ${{ matrix.container == 'golang:1.15.13-alpine3.14' }}
        run: apk add make gcc musl-dev
      - name: Download python bindings for given OS
        uses: actions/download-artifact@v2
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        with:
          name: py-terraform-provider-b2-${{ runner.os }}
          path: python-bindings/dist/
      - name: Run acceptance tests
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        timeout-minutes: 120
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        run: |
          make testacc
