name: Continuous Integration (fast)

on:
  push:
    branches: [workflow-updates]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [master]

env:
  PYTHON_DEFAULT_VERSION: 3.9
  GO_DEFAULT_VERSION: 1.15

jobs:
  build:
    runs-on: ubuntu-20.04
    container: "python:3.9-buster"
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Configure environment
        run: |
            cd /usr/local && \
            wget -q https://golang.org/dl/go1.16.5.linux-amd64.tar.gz && \
            tar xzf go1.16.5.linux-amd64.tar.gz && \
            rm go1.16.5.linux-amd64.tar.gz && mkdir /root/go && \
            echo 'export GOPATH="/root/go"' >> /root/.bashrc && \
            echo 'export PATH="/root/go/bin:/usr/local/go/bin:$PATH"' >> /root/.bashrc && \
            source /root/.bashrc
      - name: Install dependencies
        run: |
          make deps
      - name: Build the provider
        run: |
          make build
      - name: Upload python bindings
        uses: actions/upload-artifact@v2
        with:
          name: py-terraform-provider-b2-${{ runner.os }}
          path: python-bindings/dist/py-terraform-provider-b2
          if-no-files-found: error
          retention-days: 1
  test_linux:
    needs: build
    runs-on: ubuntu-20.04
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
      NOPYBINDINGS: 1 # do not build python buildings
    container: 
      image: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        container:
          - golang:1.15-alpine3.14
        terraform:
          - 1.0.0
    steps:
      - uses: actions/checkout@v2
      - name: Add software dependencies
        if: ${{ matrix.container == 'golang:1.16.5-alpine3.14' }}
        run: apk add make gcc musl-dev
      - name: Download python bindings for given OS
        uses: actions/download-artifact@v2
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        with:
          name: py-terraform-provider-b2-${{ runner.os }}
          path: python-bindings/dist/
      - name: check library content
        run: ls -la python-bindings/dist/
      - run: ls -la /tmp
      - name: Run acceptance tests
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        timeout-minutes: 120
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        run: |
          make testacc
